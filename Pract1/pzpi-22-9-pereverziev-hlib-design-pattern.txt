Міністерство освіти і науки України
      Харківський національний університет радіоелектроніки

Кафедра програмної інженерії

Звіт
    до практичної роботи №1
    з « Архітектури програмного забезпечення»





Виконав:                                                                                                       Перевірив:
ст. гр. ПЗПІ-22-9                                                                   ст. викладач кафедри ПІ
Переверзєв Г.В	                                                                                   Сокорчук І.П.

                                                  






     Харків 2025

1 ІСТОРІЯ ЗМІН

     Таблиця 1 - Історія змін
№
Дата
Версія звіту
Опис змін та виправлень
1
21.04.2025
0.1
Створено титульну сторінку звіту, розділи 1, 2, 3, 4
2
28.05.2025
0.2
Створено додатки A, Б, В


2 ЗАВДАННЯ

     У рамках виконання практичного завдання потрібно підготувати доповідь на тему «Шаблон (патерн) проєктування програмного забезпечення», спираючись на матеріали книги Ґамма «Об’єктно-орієнтоване програмування. Патерни проєктування». У процесі роботи необхідно створити презентацію, оформити її у відповідному стилі, записати відео з виступом та опублікувати його на платформі YouTube. Також слід підготувати письмовий звіт про виконану роботу та завантажити його на dl.nure.ua, після чого створити текстовий файл із коротким викладом доповіді та файл з прикладами програмного коду — обидва файли необхідно розмістити у відповідній директорії GitHub-репозиторію.


     
3 ОПИС ВИКОНАНОЇ РОБОТИ
     
     У процесі виконання практичного завдання було підготовлено доповідь на тему «Шаблон проєктування Observer». Для створення доповіді було опрацьовано матеріали з книги Ґамма «Патерни проєктування», а також додаткові джерела з відкритих Інтернет-ресурсів. Особливу увагу приділено теоретичному розумінню поведінкового патерна Observer, його архітектурі, принципам взаємодії об’єктів, а також прикладам його застосування у реальних програмних рішеннях.
     У межах доповіді була створена презентація (див. дод. Б), яка візуально демонструє основні концепції патерна Observer, логіку його роботи та приклади реалізації у вигляді фрагментів коду (див. дод. В). Структура доповіді охоплює такі розділи:
1. Що таке патерни програмування;
2. Основи патерна;
3. Архітектура патерна;
4. Приклад реалізації;
5. Переваги патерна;
6. Недоліки патерна;
7. Висновки;
8. Використані джерела.
     На основі презентації було записано відеодоповідь, у якій послідовно розкрито суть шаблону Observer, проаналізовано його сильні та слабкі сторони, а також розглянуто приклад практичного застосування (див. дод. А).
     
4 ВИСНОВКИ
     
     У процесі виконання роботи набуті практичні навички застосування поведінкового патерна Observer. Поглиблено розуміння принципів організації взаємодії між об’єктами у форматі "один до багатьох", що дозволяє автоматично повідомляти пов’язані об’єкти про зміни стану. Це сприяє побудові гнучких і масштабованих систем без жорсткої прив’язки між компонентами.
     

ДОДАТОК А

     Посилання на відеозапис та текст хронологічного опису доповіді.
     
Відеозапис доповіді на YouTube: https://www.youtube.com/watch?v=dx7BjHRHazc
Хронологічний опис:
0:01 – Представлення відео
0:22 – Зміст
0:51 – Що таке патерни програмування?
1:20 – Основи патерну
3:26 – Приклад реалізації на Java 
4:17 – Переваги патерну
4:54 – Недоліки патерну
5:24 – Висновки
6:10 – Список використаних джерел
Посилання на файл з кодом в GitHub репозиторії: https://github.com/NurePereverzievHlib/apz-pzpi-22-9-pereverziev-hlib/blob/main/Pract1/pzpi-22-9-pereverziev-hlib-design-pattern/ObserverExample.java

ДОДАТОК Б

Cлайди презентації доповіді.


Рисунок Б.1 –Титульний слайд презентації


Рисунок Б.2 – Слайд зі змістом презентації

Рисунок Б.3 – Слайд з визначенням патернів проєктування


Рисунок Б.4 – Слайд з описом патерна “Observer”



Рисунок Б.5 – Слайд з описом архітектури патерну


Рисунок Б.6 – Слайд з демонстрацією реалізації патерну на Java



Рисунок Б.7 – Слайд з переліком переваг патерну 


Рисунок Б.8 – Слайд з переліком недоліків патерну



Рисунок Б.9 – Слайд висновків


Рисунок Б.10 – Слайд використаних джерел




ДОДАТОК В

	Приклади програмного коду. Патерн “Observer” - приклад на Java.

interface Observer {
void update(float
temperature);
}

class TemperatureSensor {
private List<Observer> observers = new ArrayList<>();
private float temperature;

void addObserver(Observer observer) {
observers.add(observer);

void notifyObservers() {
for (Observer observer : observers) {
observer.update(temperature);

void setTemperature(float temperature) {
this.temperature = temperature;
notifyObservers();

}


class TemperatureDisplay implements
Observer {
public void update(float temperature) {
System.out.println("TemnepaTypa:
+ temperature + "C");
}

}
